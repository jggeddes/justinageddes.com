@charset "utf-8";
/* CSS Document */

/* Gradients are tricky as overuse and garish colors can turn a webpages south really fast! If you are going to use gradients, keep the color/value transition subtle. Gradients are not good to use as page backgrounds as you get banding if you do not have a height property and value. Gradients are best used for small areas like buttons. */



body { background-color: white; /* For browsers that do not support gradients */
  background-image: linear-gradient(045deg, #999999, #f2f2f2); /* Standard syntax (must be last) */
  height:1000px
  }
  
#container {
				width:80%;
				background-color:white;
				background-image: linear-gradient(045deg, #f2f2f2, #bfbfbf); 
				border:2px solid black;
				margin:.5em auto;
				padding: 1.5%;
				text-align:center;
				box-shadow:15px 15px 5px gray;
				display:flex;
				flex-direction: column;
				border-radius:25px;
				}

/* Buttons are most often used as a navigation tool to another page or source. Buttons can be styled just like any other element. Buttons usually contain an anchor element. As such when styling a button you should also style the ancor element as a child of the button element*/

.button {
	background-image: radial-gradient(red, yellow);
	border: none;
  	padding: 14px 40px;
  	text-align: center;
  	border-radius: 20px;
  	border:1.5px outset black;
  	text-decoration: none;
  	display: inline-block;
  	font-size: 24px;
  	margin: 25px auto;
  	cursor: pointer;
  		-webkit-transition-duration: 0.4s; /* Safari */
 	 transition-duration: 0.4s;
}

.button a {
			color: white;
			text-decoration: none;	
			padding: 15px 32px;
			}

.button a:hover {
			color: black;
			text-decoration: none;
			}

.button:hover {
	background-image: linear-gradient( red, yellow) ;
	color:black;
 	 box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
	}
	


/* Pagination is another method for navigation, but most often used when there are a lot of pages in a website. In pagination you will want to use the psuedo classes of active and not active to indicate which page the user is currently viewing.*/

.flex-container {
 	display: flex;
  	flex-direction: row;
 	background-color:lightblue;
 	justify-content:center;
		}

.pagination {
   display: inline-block;
   margin: 20px auto;
}

.pagination a {
  color: black;
  float: left;
  padding: 8px 16px;
  text-decoration: none;
}

.pagination a.active {
  background-color: #248f8f;
  color: white;
  border-radius: 5px;
}

.pagination a:hover:not(.active) 
	{
	background-color: #c2f0f0;
	border-radius: 5px;
	}


/* CSS columns is a way of dividing a larger block of text into columns. It is easy, but not truly responsive without a media query command to collapse the columns when being viewed on a divice.*/

.columns {
			column-count: 2;
			column-gap: 40px;
			column-rule: 4px solid white;
			text-align:left;
			}

.columns h2 {
			column-span: all;}


.mycolumns {
  			column-count: 3;
  			column-gap: 40px;
  			column-rule: 2px solid white;
  			text-align:left;
  			}

.mycolumns h2 {
				column-span: all;
				}


/* tooltip lets you hover over a word or phrase to make another word or phrase pop up in a box.*/


.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px solid black;
}

.tooltip .tooltiptext {
  visibility: hidden;
  width: 140px;
  background-color: black;
  color: #fff;
  text-align: center;
  border-radius: 10px;
  padding: 9px 0;

  /* Position the tooltip */
  position: absolute;
  z-index: 3;
  top: 100%;
  left: 50%;
  margin-left: -60px;
}


.tooltip .tooltiptext::after {
  content: "";
  position: absolute;
  bottom: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent black transparent;
}




.tooltip:hover .tooltiptext {
  visibility: visible;
}



